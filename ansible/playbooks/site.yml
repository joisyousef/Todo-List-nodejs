# playbooks/setup-docker.yml - Fixed Amazon Linux Version
---
- name: Configure VM and Install Docker on Amazon Linux
  hosts: web_servers
  become: yes
  gather_facts: yes
  
  tasks:
    - name: Update yum package cache
      yum:
        update_cache: yes
    
    - name: Install required packages
      yum:
        name:
          - docker
          - git
          - htop
          - vim
          - python3-pip
        state: present
    
    - name: Add ec2-user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
    
    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes
    
    # Alternative 1: Install Docker Compose Plugin (Recommended)
    - name: Download Docker Compose plugin
      get_url:
        url: "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-linux-x86_64"
        dest: "/usr/local/bin/docker-compose"
        mode: '0755'
        owner: root
        group: root
    
    - name: Create docker-compose symlink
      file:
        src: /usr/local/bin/docker-compose
        dest: /usr/bin/docker-compose
        state: link
    
    - name: Create application directory
      file:
        path: /opt/todo-app
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'
    
    - name: Test Docker installation
      command: docker --version
      register: docker_version
      become_user: "{{ ansible_user }}"
    
    - name: Test Docker Compose installation
      command: docker-compose --version
      register: compose_version
      become_user: "{{ ansible_user }}"
    
    - name: Display installation versions
      debug:
        msg: 
          - "Docker installed: {{ docker_version.stdout }}"
          - "Docker Compose installed: {{ compose_version.stdout }}"
    
    - name: Test Docker functionality
      command: docker run --rm hello-world
      register: docker_test
      become_user: "{{ ansible_user }}"
      ignore_errors: yes
    
    - name: Display Docker test result
      debug:
        msg: "Docker test completed successfully"
      when: docker_test.rc == 0
    
    - name: Reboot notification
      debug:
        msg: "IMPORTANT: You may need to log out and back in (or reboot) for docker group changes to take effect"