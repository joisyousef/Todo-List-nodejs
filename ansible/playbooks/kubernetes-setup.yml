---
- name: Install Kubernetes (K3s) and ArgoCD
  hosts: web_servers
  become: yes
  gather_facts: true

  vars:
    k3s_version: "v1.28.5+k3s1"
    argocd_namespace: "argocd"

  tasks:
    - name: Download and install K3s
      shell: |
        curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s_version }} sh -s - --write-kubeconfig-mode 644
      args:
        creates: /usr/local/bin/k3s

    - name: Wait for K3s to be ready
      wait_for:
        port: 6443
        host: "{{ ansible_default_ipv4.address }}"
        delay: 10
        timeout: 300

    - name: Create .kube directory for ec2-user
      file:
        path: /home/ec2-user/.kube
        state: directory
        owner: ec2-user
        group: ec2-user
        mode: '0755'

    - name: Copy kubeconfig for ec2-user
      copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /home/ec2-user/.kube/config
        remote_src: yes
        owner: ec2-user
        group: ec2-user
        mode: '0644'

    - name: Update kubeconfig server address
      replace:
        path: /home/ec2-user/.kube/config
        regexp: 'server: https://127.0.0.1:6443'
        replace: 'server: https://{{ ansible_default_ipv4.address }}:6443'
      become_user: ec2-user

    - name: Install kubectl alias
      lineinfile:
        path: /home/ec2-user/.bashrc
        line: 'alias k=kubectl'
        create: yes
      become_user: ec2-user

    - name: Create ArgoCD namespace
      shell: |
        kubectl create namespace {{ argocd_namespace }} --dry-run=client -o yaml | kubectl apply -f -
      become_user: ec2-user
      environment:
        KUBECONFIG: /home/ec2-user/.kube/config

    - name: Install ArgoCD
      shell: |
        kubectl apply -n {{ argocd_namespace }} -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
      become_user: ec2-user
      environment:
        KUBECONFIG: /home/ec2-user/.kube/config

    - name: Wait for ArgoCD server deployment
      shell: |
        kubectl wait --for=condition=available --timeout=600s deployment/argocd-server -n {{ argocd_namespace }}
      become_user: ec2-user
      environment:
        KUBECONFIG: /home/ec2-user/.kube/config

    - name: Patch ArgoCD server service to NodePort
      shell: |
        kubectl patch svc argocd-server -n {{ argocd_namespace }} -p '{"spec":{"type":"NodePort","ports":[{"port":80,"protocol":"TCP","targetPort":8080,"nodePort":30080},{"port":443,"protocol":"TCP","targetPort":8080,"nodePort":30443}]}}'
      become_user: ec2-user
      environment:
        KUBECONFIG: /home/ec2-user/.kube/config

    - name: Install ArgoCD Image Updater
      shell: |
        kubectl apply -n {{ argocd_namespace }} -f https://raw.githubusercontent.com/argoproj-labs/argocd-image-updater/stable/manifests/install.yaml
      become_user: ec2-user
      environment:
        KUBECONFIG: /home/ec2-user/.kube/config

    - name: Get ArgoCD initial admin password
      shell: |
        kubectl -n {{ argocd_namespace }} get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
      become_user: ec2-user
      environment:
        KUBECONFIG: /home/ec2-user/.kube/config
      register: argocd_password

    - name: Display ArgoCD access information
      debug:
        msg: |
          ====================================================
          ArgoCD Installation Complete!
          ====================================================
          URL: http://{{ ansible_default_ipv4.address }}:30080
          Username: admin
          Password: {{ argocd_password.stdout }}
          ====================================================